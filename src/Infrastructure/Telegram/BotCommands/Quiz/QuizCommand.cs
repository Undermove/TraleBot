using Domain.Entities;
using Infrastructure.Telegram.Models;
using Telegram.Bot;
using Telegram.Bot.Types.ReplyMarkups;

namespace Infrastructure.Telegram.BotCommands.Quiz;

public class QuizCommand : IBotCommand
{
    private readonly TelegramBotClient _client;

    public QuizCommand(TelegramBotClient client)
    {
        _client = client;
    }

    public Task<bool> IsApplicable(TelegramRequest request, CancellationToken ct)
    {
        var commandPayload = request.Text;
        return Task.FromResult(commandPayload.Equals(CommandNames.Quiz, StringComparison.InvariantCultureIgnoreCase));
    }

    public async Task Execute(TelegramRequest request, CancellationToken token)
    {
        var keyboard = new InlineKeyboardMarkup(new[]
        {
            new[] { InlineKeyboardButton.WithCallbackData("–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é", $"{CommandNames.Quiz} {QuizTypes.LastWeek}") },
            new[] { InlineKeyboardButton.WithCallbackData("üîì–ó–∞ —Å–µ–≥–æ–¥–Ω—è", $"{CommandNames.Quiz} {QuizTypes.LastDay}") },
            new[] { InlineKeyboardButton.WithCallbackData("üîì10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–ª–æ–≤", $"{CommandNames.Quiz} {QuizTypes.SeveralRandomWords}") },
            new[] { InlineKeyboardButton.WithCallbackData("üîì–ü–æ –Ω–∞–∏–±–æ–ª–µ–µ —á–∞—Å—Ç—ã–º –æ—à–∏–±–∫–∞–º", $"{CommandNames.Quiz} {QuizTypes.MostFailed}") },
        });

        await _client.SendTextMessageAsync(
            request.UserTelegramId,
            "üí¨ –í—ã–±–µ—Ä–∏ —Ç–∏–ø –∫–≤–∏–∑–∞:",
            replyMarkup: keyboard,
            cancellationToken: token
        );
    }
}