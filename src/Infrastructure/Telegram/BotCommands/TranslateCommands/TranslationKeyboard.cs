using Domain.Entities;
using Infrastructure.Telegram.CallbackSerialization;
using Infrastructure.Telegram.CommonComponents;
using Infrastructure.Telegram.Models;
using Telegram.Bot;
using Telegram.Bot.Types.ReplyMarkups;

namespace Infrastructure.Telegram.BotCommands.TranslateCommands;

public static class TranslationKeyboard
{
    public static Task SendTranslation(this ITelegramBotClient client,
        TelegramRequest request, 
        Guid vocabularyEntryId,
        string definition,
        string additionalInfo,
        string? example,
        CancellationToken token)
    {
        var removeFromVocabularyText = "‚ùå –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ —Å–ª–æ–≤–∞—Ä—å.";
        return SendTranslation(
            client,
            request, 
            vocabularyEntryId,
            definition,
            additionalInfo,
            example,
            removeFromVocabularyText,
            token);
    }
    
    public static Task UpdateTranslation(this ITelegramBotClient client,
        TelegramRequest request, 
        Guid vocabularyEntryId,
        string definition,
        string additionalInfo,
        string? example,
        CancellationToken token)
    {
        var removeFromVocabularyText = "‚ùå –ù–µ –¥–æ–±–∞–≤–ª—è—Ç—å –≤ —Å–ª–æ–≤–∞—Ä—å.";
        return UpdateTranslation(
            client,
            request, 
            vocabularyEntryId,
            definition,
            additionalInfo,
            example,
            removeFromVocabularyText,
            token);
    }
    
    public static Task SendExistedTranslation(this ITelegramBotClient client, 
        TelegramRequest request,
        Guid vocabularyEntryId,
        string definition,
        string additionalInfo,
        string? example,
        CancellationToken token)
    {
        var removeFromVocabularyText = "‚ùå –ï—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ. –£–¥–∞–ª–∏—Ç—å?";
        return SendTranslation(
            client,
            request,
            vocabularyEntryId,
            definition,
            additionalInfo,
            example,
            removeFromVocabularyText,
            token);
    }
    
    public static Task UpdateExistedTranslation(this ITelegramBotClient client, 
        TelegramRequest request,
        Guid vocabularyEntryId,
        string definition,
        string additionalInfo,
        string? example,
        CancellationToken token)
    {
        var removeFromVocabularyText = "‚ùå –ï—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ. –£–¥–∞–ª–∏—Ç—å?";
        return UpdateTranslation(
            client,
            request,
            vocabularyEntryId,
            definition,
            additionalInfo,
            example,
            removeFromVocabularyText,
            token);
    }
    
    public static async Task HandleEmojiDetected(this ITelegramBotClient client,TelegramRequest request, CancellationToken token)
    {
        await client.SendTextMessageAsync(
            request.UserTelegramId,
            "–ö–∞–∂–µ—Ç—Å—è, —á—Ç–æ —Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏ üòÖ.",
            cancellationToken: token);
    }
    
    public static async Task HandlePromptLengthExceeded(
        this ITelegramBotClient client,
        TelegramRequest request,
        CancellationToken token)
    {
        await client.SendTextMessageAsync(
            request.UserTelegramId,
            @"
üìè –î–ª–∏–Ω–Ω–∞ —Å—Ç—Ä–æ–∫–∏ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–∞—è. –ü–æ–ø—Ä–æ–±—É–π —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –µ—ë. –†–∞–∑—Ä–µ—à–µ–Ω–æ –Ω–µ –±–æ–ª–µ–µ 40 —Å–∏–º–≤–æ–ª–æ–≤.
",
            cancellationToken: token);
    }
    
    public static async Task HandleFailure(this ITelegramBotClient client,TelegramRequest request, CancellationToken token)
    {
        await client.SendTextMessageAsync(
            request.UserTelegramId,
@$"üôá‚Äç –ü–æ–∫–∞ –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —ç—Ç–æ —Å–ª–æ–≤–æ. –î–ª—è —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {request.User!.Settings.CurrentLanguage.GetLanguageFlag()}
–°–ª–æ–≤–∞ –Ω–µ—Ç –≤ –º–æ–µ–π –±–∞–∑–µ –∏–ª–∏ –≤ –Ω—ë–º –µ—Å—Ç—å –æ–ø–µ—á–∞—Ç–∫–∞.

–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Ä—É—á–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥, —Ç–æ –≤–≤–µ–¥–∏ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Å–ª–æ–≤–æ-–ø–µ—Ä–µ–≤–æ–¥
–ö –ø—Ä–∏–º–µ—Ä—É: cat-–∫–æ—à–∫–∞",
            cancellationToken: token);
    }
    
    public static Task HandleDefinitionIsNotSet(this ITelegramBotClient client, TelegramRequest request, CancellationToken token)
    {
        return client.SendTextMessageAsync(
            request.UserTelegramId,
            "–í–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ. –í–≤–µ–¥–∏ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —Å–ª–æ–≤–æ - –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ",
            cancellationToken: token);
    }
    
    public static async Task HandlePremiumRequired(
        this ITelegramBotClient client,
        TelegramRequest request,
        Language currentLanguage,
        Language targetLanguage,
        CancellationToken token)
    {
        await client.SendTextMessageAsync(
            request.UserTelegramId, 
            text: """
                  –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–µ—Å—Ç–∏ —Å–ª–æ–≤–∞—Ä—å —Ç–æ–ª—å–∫–æ –Ω–∞ –æ–¥–Ω–æ–º —è–∑—ã–∫–µ.

                  –ß—Ç–æ–±—ã –∏–º–µ—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤–∞—Ä–µ–π –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö, –ø–æ–¥–∫–ª—é—á–∏ ‚≠êÔ∏è –ü—Ä–µ–º–∏—É–º-–∞–∫–∫–∞—É–Ω—Ç –≤ –º–µ–Ω—é.
                  """,
            replyMarkup: new InlineKeyboardMarkup(new[]
            {
                new[]
                {
                    InlineKeyboardButton.WithCallbackData("–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ü—Ä–µ–º–∏—É–º–µ", CommandNames.Pay)
                }
            }),
            cancellationToken: token);
    }
    
    private static async Task SendTranslation(
        ITelegramBotClient client,
        TelegramRequest request,
        Guid vocabularyEntryId,
        string definition,
        string additionalInfo,
        string? example,
        string removeFromVocabularyText, 
        CancellationToken token)
    {
        var replyMarkup = new List<InlineKeyboardButton[]>
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData(removeFromVocabularyText,
                    $"{CommandNames.RemoveEntry} {vocabularyEntryId}")
            }
        };

        if (request.User!.Settings.CurrentLanguage == Language.English)
        {
            replyMarkup.Add([
                InlineKeyboardButton.WithUrl("–ü–µ—Ä–µ–≤–æ–¥ Wooordhunt", $"https://wooordhunt.ru/word/{request.Text}"),
                InlineKeyboardButton.WithUrl("–ü–µ—Ä–µ–≤–æ–¥ Reverso Context",
                    $"https://context.reverso.net/translation/russian-english/{request.Text}")
            ]);
        }
        
        replyMarkup.Add([
            InlineKeyboardButton.WithCallbackData($"{CommandNames.ChangeTranslationLanguageIcon} –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –¥—Ä—É–≥–æ–π —è–∑—ã–∫", $"{CommandNames.ChangeTranslationLanguage} {vocabularyEntryId}")
        ]);
        
        replyMarkup.Add([
            InlineKeyboardButton.WithCallbackData($"{CommandNames.MenuIcon} –ú–µ–Ω—é", CommandNames.Menu)
        ]);
        
        var keyboard = new InlineKeyboardMarkup(replyMarkup.ToArray());

        await client.SendTextMessageAsync(
            request.UserTelegramId,
@$"–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {definition}
–î—Ä—É–≥–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: {additionalInfo}
–ü—Ä–∏–º–µ—Ä —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è: {example}",
            replyMarkup: keyboard,
            cancellationToken: token);
    }
    
    private static async Task UpdateTranslation(
        ITelegramBotClient client,
        TelegramRequest request,
        Guid vocabularyEntryId,
        string definition,
        string additionalInfo,
        string? example,
        string removeFromVocabularyText, 
        CancellationToken token)
    {
        var replyMarkup = new List<InlineKeyboardButton[]>
        {
            new[]
            {
                InlineKeyboardButton.WithCallbackData(removeFromVocabularyText,
                    $"{CommandNames.RemoveEntry} {vocabularyEntryId}")
            }
        };

        if (request.User!.Settings.CurrentLanguage == Language.English)
        {
            replyMarkup.Add([
                InlineKeyboardButton.WithUrl("–ü–µ—Ä–µ–≤–æ–¥ Wooordhunt", $"https://wooordhunt.ru/word/{request.Text}"),
                InlineKeyboardButton.WithUrl("–ü–µ—Ä–µ–≤–æ–¥ Reverso Context",
                    $"https://context.reverso.net/translation/russian-english/{request.Text}")
            ]);
        }
        
        replyMarkup.Add([
            InlineKeyboardButton.WithCallbackData($"{CommandNames.ChangeTranslationLanguageIcon} –ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –Ω–∞ –¥—Ä—É–≥–æ–π —è–∑—ã–∫", $"{CommandNames.ChangeTranslationLanguage} {vocabularyEntryId}")
        ]);
        
        replyMarkup.Add([
            InlineKeyboardButton.WithCallbackData($"{CommandNames.MenuIcon} –ú–µ–Ω—é", CommandNames.Menu)
        ]);
        
        var keyboard = new InlineKeyboardMarkup(replyMarkup.ToArray());

        await client.EditMessageTextAsync(
            request.UserTelegramId,
            request.MessageId,
            @$"–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ: {definition}
–î—Ä—É–≥–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è: {additionalInfo}
–ü—Ä–∏–º–µ—Ä —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è: {example}",
            replyMarkup: keyboard,
            cancellationToken: token);
    }
}