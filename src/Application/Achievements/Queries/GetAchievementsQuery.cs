using Application.Achievements.Services.Checkers;
using Application.Common;
using MediatR;
using Microsoft.EntityFrameworkCore;

namespace Application.Achievements.Queries;

public class GetAchievementsQuery : IRequest<AchievementsListVm>
{
    public required Guid UserId { get; init; }

    public class Handler : IRequestHandler<GetAchievementsQuery, AchievementsListVm>
    {
        private readonly ITraleDbContext _context;
        private readonly IEnumerable<IAchievementChecker<object>> _achievementCheckers;
        
        public Handler(ITraleDbContext context, IEnumerable<IAchievementChecker<object>> achievementCheckers)
        {
            _context = context;
            _achievementCheckers = achievementCheckers;
        }

        public async Task<AchievementsListVm> Handle(GetAchievementsQuery request, CancellationToken cancellationToken)
        {
            var unlockedAchievements = await _context.Achievements
                .Where(a => a.UserId == request.UserId)
                .Select(achievement => achievement.AchievementTypeId)
                .ToListAsync(cancellationToken: cancellationToken);

            var allAchievements = _achievementCheckers.Select(checker => new AchievementVm
            {
                Name = checker.Name,
                Description = checker.Description,
                Icon = checker.Icon,
                IsUnlocked = unlockedAchievements.Contains(checker.AchievementTypeId)
            }).ToList();
            
            var result = new AchievementsListVm { Achievements = allAchievements };
            return result;
        }
    }

    public void GetAchievements()
    {
        string achievementsMessage = """
    üìä<b>–¢–≤–æ–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:</b>
    ü§™ –ë–∞–∑–æ–≤—ã–π —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω–∏–∫ ‚Äì 10 —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ
     
    üó£ –ü—Ä–æ–∫–∞—á–∞–Ω–Ω—ã–π –±–æ–ª—Ç—É–Ω ‚Äì 100 —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ
      
    üßë‚Äçüéì –Æ–Ω—ã–π —ç—Ä—É–¥–∏—Ç ‚Äì 1000 —Å–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ
     
    ‚≠ê –ù–∞—á–∏–Ω–∞—é—â–∏–π –∫–≤–∏–∑—ë—Ä ‚Äì –ø—Ä–æ–π–¥–∏ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫–≤–∏–∑
     
    ü§ì –ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç ‚Äì –∑–∞–≤–µ—Ä—à–∏ –Ω–∞ 100% –∫–≤–∏–∑ —Å –∫–∞–∫ –º–∏–Ω–∏–º—É–º 10 —Å–ª–æ–≤–∞–º–∏.
     
    ‚úÖ –†–µ—à–∞–ª–∞ ‚Äì –ø—Ä–æ–π–¥–∏ –Ω–∞ 100% –∫–≤–∏–∑ –∑–∞ –Ω–µ–¥–µ–ª—é —Å 30 —Å–ª–æ–≤–∞–º–∏.
     
    ‚ùì –Ø —Ç–æ–ª—å–∫–æ —Å–ø—Ä–æ—Å–∏—Ç—å ‚Äì –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ, –Ω–æ –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å
     
    üò§ –°–∞–º –∑–Ω–∞—é ‚Äì –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ –≤—Ä—É—á–Ω—É—é
     
    ü•â –ú–µ–¥–∞–ª–∏—Å—Ç ‚Äì 10 —Å–ª–æ–≤ —Å –∑–æ–ª–æ—Ç–æ–π –º–µ–¥–∞–ª—å—é
     
    ü•à –°–µ—Ä–µ–±—Ä—è–Ω—ã–π –ø—Ä–∏–∑–µ—Ä ‚Äì 100 —Å–ª–æ–≤ —Å –∑–æ–ª–æ—Ç–æ–π –º–µ–¥–∞–ª—å—é
     
    ü•á –ö–æ—Ä–æ–ª—å –∑–∞—á—ë—Ç–∞ ‚Äì 1000 —Å–ª–æ–≤ —Å –∑–æ–ª–æ—Ç–æ–π –º–µ–¥–∞–ª—å—é
     
    üèµ –ê–º–µ—Ç–∏—Å—Ç ‚Äì 10 —Å–ª–æ–≤ —Å –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–º –≤ —Å–ª–æ–≤–∞—Ä–µ
     
    üèÜ –ò–∑—É–º—Ä—É–¥ ‚Äì 100 —Å–ª–æ–≤ —Å –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–º –≤ —Å–ª–æ–≤–∞—Ä–µ
     
    üíé –Ø –∏ –µ—Å—Ç—å —Å–ª–æ–≤–∞—Ä—å ‚Äì 1000 —Å–ª–æ–≤ —Å –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–º –≤ —Å–ª–æ–≤–∞—Ä–µ
    """;
    }
}